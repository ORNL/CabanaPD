name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  CI:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        distro: ['ubuntu:latest']
        cxx: ['g++', 'clang++']
        backend: ['SERIAL', 'OPENMP']
        cmake_build_type: ['Debug', 'Release']
        kokkos_ver: ['3.6.01']
        output: ['HDF5']
        include:
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            backend: 'SERIAL'
            cmake_build_type: 'Debug'
            kokkos_ver: '3.6.01'
            output: 'SILO'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            backend: 'SERIAL'
            cmake_build_type: 'Debug'
            kokkos_ver: '3.6.01'
            output: 'NONE'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            backend: 'SERIAL'
            cmake_build_type: 'Debug'
            kokkos_ver: '3.6.01'
            output: 'BOTH'
    runs-on: ubuntu-20.04
    container: ghcr.io/ecp-copa/ci-containers/${{ matrix.distro }}
    steps:
      - name: Checkout kokkos
        uses: actions/checkout@v2.2.0
        with:
          repository: kokkos/kokkos
          ref: ${{ matrix.kokkos_ver }}
          path: kokkos
      - name: Build kokkos
        working-directory: kokkos
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_INSTALL_PREFIX=$HOME/kokkos \
            -DKokkos_ENABLE_${{ matrix.backend }}=ON \
            -DKokkos_ENABLE_HWLOC=ON
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Cabana
        uses: actions/checkout@v2.2.0
        with:
          repository: ECP-CoPA/Cabana
          # This version is post-release 0.5
          ref: 4fdb7eeb3ea32557444766a917fb9252af8540d6
          path: cabana
      - name: Build Cabana
        working-directory: cabana
        run: |
          if [[ ${{ matrix.output }} == 'HDF5' ]]; then
            cabana_cmake_opts+=( -DCabana_REQUIRE_HDF5=ON -DCMAKE_DISABLE_FIND_PACKAGE_SILO=ON )
          elif [[ ${{ matrix.output }} == 'SILO' ]]; then
            cabana_cmake_opts+=( -DCabana_REQUIRE_SILO=ON -DCMAKE_DISABLE_FIND_PACKAGE_HDF5=ON )
          elif [[ ${{ matrix.output }} == 'BOTH' ]]; then
            cabana_cmake_opts+=( -DCabana_REQUIRE_SILO=ON -DCabana_REQUIRE_HDF5=ON )
          else
            cabana_cmake_opts+=( -DCMAKE_DISABLE_FIND_PACKAGE_SILO=ON -DCMAKE_DISABLE_FIND_PACKAGE_HDF5=ON )
          fi
          cmake -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_INSTALL_PREFIX=$HOME/Cabana \
            -DCMAKE_PREFIX_PATH="$HOME/kokkos" \
            ${cabana_cmake_opts[@]}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout CabanaPD
        uses: actions/checkout@v2.2.0
      - name: Build CabanaPD
        run: |
          cmake -B build \
            -D CMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -D CMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -D CMAKE_CXX_FLAGS="-Wall -Wextra -pedantic -Werror" \
            -D CMAKE_INSTALL_PREFIX=$HOME/CabanaPD \
            -D CMAKE_PREFIX_PATH="$HOME/Cabana" \
            -D MPIEXEC_MAX_NUMPROCS=2 \
            -D MPIEXEC_PREFLAGS="--oversubscribe" \
            -D CabanaPD_ENABLE_TESTING=ON
          cmake --build build --parallel 2
          cmake --install build
      - name: Test CabanaPD
        run: |
          CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --target test
